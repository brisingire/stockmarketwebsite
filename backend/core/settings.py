"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from celery.schedules import crontab
from datetime import timedelta


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n@_6clmw&%$bcu4+v0tkohipq^8rz6$kh)s9$@$kgcz-l$h$h#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api', 
    'updating_data', 
    'django_celery_beat',
    'rest_framework', 
    "corsheaders",
    'django_filters'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'stockmarket_data',  # the name of your database
        'USER': 'postgres',  # the user you use to access PostgreSQL
        'PASSWORD': 'joniluci2',  # replace 'your_password' with the password you just set
        'HOST': 'localhost',  # assuming your PostgreSQL server is running on your local machine
        'PORT': '5432',  # the default PostgreSQL port
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = ["http://localhost:8080", "http://localhost:3000"]

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS':'rest_framework.pagination.LimitOffsetPagination',
}


CELERY_BROKER_URL = 'redis://redis:6379/0'


CELERY_BEAT_SCHEDULE = {
    "scheduled_task_1": {
        "task": "api.tasks.update_stock_data",
        "schedule": crontab(minute=0, hour='0,6,12,18'),
        "args": (),
    },
    "scheduled_task_2": {
        "task": "api.tasks.update_stock_information",
        "schedule": crontab(minute=30, hour='0,6,12,18'),
        "args": (),
    },
    "scheduled_task_3": {
        "task": "updating_data.tasks.update_sector_information",
        "schedule": crontab(minute=0, hour='1,7,13,19'),
        "args": (),
    },
    "scheduled_task_4": {
        "task": "updating_data.tasks.update_sector_data",
        "schedule": crontab(minute=30, hour='1,7,13,19'),
        "args": (),
    },
    "scheduled_task_5": {
        "task": "updating_data.tasks.update_industry_information",
        "schedule": crontab(minute=0, hour='2,8,14,20'),
        "args": (),
    },
    "scheduled_task_6": {
        "task": "updating_data.tasks.update_industry_data",
        "schedule": crontab(minute=30, hour='2,8,14,20'),
        "args": (),
    },
    "scheduled_task_7": {
        "task": "updating_data.tasks.updating_theme_data",
        "schedule": crontab(minute=0, hour='3,9,15,21'),
        "args": (),
    },
}

